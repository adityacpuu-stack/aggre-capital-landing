"use client"

import { useState, useEffect } from "react"
import { useParams, useRouter } from "next/navigation"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { 
  ArrowLeft,
  Calendar,
  User,
  Clock,
  Tag,
  Share2,
  BookOpen,
  TrendingUp,
  Heart,
  Bookmark,
  Eye,
  MessageCircle,
  Facebook,
  Twitter,
  Linkedin,
  Copy,
  Check
} from "lucide-react"
import Image from "next/image"
import ArticleSidebar from "@/components/news/ArticleSidebar"
import NewsSidebar from "@/components/news/NewsSidebar"

interface NewsArticle {
  id: number
  title: string
  slug: string
  content: string
  excerpt: string
  featured_image: string
  author: string
  status: string
  category: string
  tags: string
  meta_description: string
  read_time: number
  featured: boolean
  created_at: string
  updated_at: string
  published_at: string
}

export default function NewsDetailPage() {
  const params = useParams()
  const router = useRouter()
  const [article, setArticle] = useState<NewsArticle | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [isLiked, setIsLiked] = useState(false)
  const [isBookmarked, setIsBookmarked] = useState(false)
  const [showShareMenu, setShowShareMenu] = useState(false)
  const [copied, setCopied] = useState(false)
  const [readingProgress, setReadingProgress] = useState(0)

  useEffect(() => {
    if (params.slug) {
      fetchArticle(params.slug as string)
    }
  }, [params.slug])

  useEffect(() => {
    const handleScroll = () => {
      const scrollTop = window.scrollY
      const docHeight = document.documentElement.scrollHeight - window.innerHeight
      const scrollPercent = (scrollTop / docHeight) * 100
      setReadingProgress(scrollPercent)
    }

    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  const fetchArticle = async (slug: string) => {
    try {
      setLoading(true)
      const response = await fetch(`/api/news/public?slug=${slug}`)
      const result = await response.json()
      
      if (result.success && result.data && result.data.length > 0) {
        setArticle(result.data[0])
      } else {
        setError('Artikel tidak ditemukan')
      }
    } catch (error) {
      console.error('Failed to fetch article:', error)
      setError('Gagal memuat artikel')
    } finally {
      setLoading(false)
    }
  }

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('id-ID', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    })
  }

  const handleShare = async (platform: string) => {
    const url = window.location.href
    const title = article?.title || ''
    const text = article?.excerpt || ''

    switch (platform) {
      case 'facebook':
        window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`, '_blank')
        break
      case 'twitter':
        window.open(`https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(title)}`, '_blank')
        break
      case 'linkedin':
        window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`, '_blank')
        break
      case 'copy':
        try {
          await navigator.clipboard.writeText(url)
          setCopied(true)
          setTimeout(() => setCopied(false), 2000)
        } catch (err) {
          console.error('Failed to copy:', err)
        }
        break
      default:
        if (navigator.share) {
          navigator.share({ title, text, url })
        } else {
          await handleShare('copy')
        }
    }
    setShowShareMenu(false)
  }

  const handleLike = () => {
    setIsLiked(!isLiked)
  }

  const handleBookmark = () => {
    setIsBookmarked(!isBookmarked)
  }

  const getCategoryColor = (category: string) => {
    switch (category.toLowerCase()) {
      case 'business': return 'bg-blue-100 text-blue-800'
      case 'technology': return 'bg-green-100 text-green-800'
      case 'finance': return 'bg-purple-100 text-purple-800'
      case 'news': return 'bg-gray-100 text-gray-800'
      default: return 'bg-teal-100 text-teal-800'
    }
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin w-12 h-12 border-4 border-teal-600 border-t-transparent rounded-full mx-auto mb-4"></div>
          <p className="text-gray-600">Memuat artikel...</p>
        </div>
      </div>
    )
  }

  if (error || !article) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center max-w-md mx-auto px-4">
          <div className="text-6xl mb-4">ðŸ“°</div>
          <h1 className="text-2xl font-bold text-gray-900 mb-2">Artikel Tidak Ditemukan</h1>
          <p className="text-gray-600 mb-6">
            {error || 'Artikel yang Anda cari tidak ditemukan atau mungkin telah dihapus.'}
          </p>
          <div className="space-y-3">
            <Button
              onClick={() => router.push('/news')}
              className="bg-teal-600 hover:bg-teal-700"
            >
              Lihat Semua Berita
            </Button>
            <Button
              variant="outline"
              onClick={() => router.push('/')}
            >
              Kembali ke Beranda
            </Button>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
      {/* Reading Progress Bar */}
      <div className="fixed top-0 left-0 w-full h-1 bg-gray-200 z-50">
        <div 
          className="h-full bg-gradient-to-r from-teal-500 to-teal-600 transition-all duration-300 ease-out"
          style={{ width: `${readingProgress}%` }}
        />
      </div>

      {/* Header */}
      <div className="bg-white/80 backdrop-blur-sm border-b sticky top-0 z-40">
        <div className="max-w-4xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <Button
              variant="ghost"
              onClick={() => router.push('/news')}
              className="flex items-center space-x-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100"
            >
              <ArrowLeft className="h-4 w-4" />
              <span>Kembali ke Berita</span>
            </Button>
            
            <div className="flex items-center space-x-2">
              <Button
                variant="ghost"
                size="sm"
                onClick={handleLike}
                className={`flex items-center space-x-1 ${
                  isLiked ? 'text-red-500' : 'text-gray-500 hover:text-red-500'
                }`}
              >
                <Heart className={`h-4 w-4 ${isLiked ? 'fill-current' : ''}`} />
                <span className="text-sm">Suka</span>
              </Button>
              
              <Button
                variant="ghost"
                size="sm"
                onClick={handleBookmark}
                className={`flex items-center space-x-1 ${
                  isBookmarked ? 'text-yellow-500' : 'text-gray-500 hover:text-yellow-500'
                }`}
              >
                <Bookmark className={`h-4 w-4 ${isBookmarked ? 'fill-current' : ''}`} />
                <span className="text-sm">Simpan</span>
              </Button>
              
              <div className="relative">
                <Button
                  variant="ghost"
                  size="sm"
                  onClick={() => setShowShareMenu(!showShareMenu)}
                  className="flex items-center space-x-1 text-gray-500 hover:text-teal-600"
                >
                  <Share2 className="h-4 w-4" />
                  <span className="text-sm">Bagikan</span>
                </Button>
                
                {showShareMenu && (
                  <div className="absolute right-0 top-full mt-2 w-48 bg-white rounded-lg shadow-lg border py-2 z-50">
                    <button
                      onClick={() => handleShare('facebook')}
                      className="w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-2"
                    >
                      <Facebook className="h-4 w-4 text-blue-600" />
                      <span>Facebook</span>
                    </button>
                    <button
                      onClick={() => handleShare('twitter')}
                      className="w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-2"
                    >
                      <Twitter className="h-4 w-4 text-blue-400" />
                      <span>Twitter</span>
                    </button>
                    <button
                      onClick={() => handleShare('linkedin')}
                      className="w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-2"
                    >
                      <Linkedin className="h-4 w-4 text-blue-700" />
                      <span>LinkedIn</span>
                    </button>
                    <button
                      onClick={() => handleShare('copy')}
                      className="w-full px-4 py-2 text-left hover:bg-gray-50 flex items-center space-x-2"
                    >
                      {copied ? <Check className="h-4 w-4 text-green-600" /> : <Copy className="h-4 w-4" />}
                      <span>{copied ? 'Tersalin!' : 'Salin Link'}</span>
                    </button>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-12 gap-8">
          {/* Left Sidebar */}
          <div className="lg:col-span-3 order-2 lg:order-1">
            <ArticleSidebar
              article={article}
              readingProgress={readingProgress}
              onScrollToTop={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
              onLike={handleLike}
              onBookmark={handleBookmark}
              onShare={() => setShowShareMenu(!showShareMenu)}
              isLiked={isLiked}
              isBookmarked={isBookmarked}
            />
          </div>

          {/* Main Content */}
          <div className="lg:col-span-6 order-1 lg:order-2">
            {/* Article Header */}
            <div className="mb-12">
              <div className="flex items-center space-x-3 mb-6">
                <Badge className={`${getCategoryColor(article.category)} px-4 py-2 text-sm font-medium`}>
                  {article.category}
                </Badge>
                {article.featured && (
                  <Badge className="bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-4 py-2 text-sm font-medium">
                    <TrendingUp className="h-3 w-3 mr-1" />
                    Featured
                  </Badge>
                )}
              </div>
              
              <h1 className="text-5xl font-bold text-gray-900 mb-6 leading-tight tracking-tight">
                {article.title}
              </h1>
              
              {article.excerpt && (
                <div className="bg-gradient-to-r from-teal-50 to-blue-50 border-l-4 border-teal-500 p-6 rounded-r-lg mb-8">
                  <p className="text-xl text-gray-700 leading-relaxed font-medium">
                    {article.excerpt}
                  </p>
                </div>
              )}

              {/* Article Meta */}
              <div className="bg-white rounded-xl p-6 shadow-sm border mb-8">
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                  <div className="flex items-center space-x-3">
                    <div className="p-2 bg-blue-100 rounded-lg">
                      <User className="h-5 w-5 text-blue-600" />
                    </div>
                    <div>
                      <p className="text-sm text-gray-500">Penulis</p>
                      <p className="font-medium text-gray-900">{article.author}</p>
                    </div>
                  </div>
              
              <div className="flex items-center space-x-3">
                <div className="p-2 bg-green-100 rounded-lg">
                  <Calendar className="h-5 w-5 text-green-600" />
                </div>
                <div>
                  <p className="text-sm text-gray-500">Diterbitkan</p>
                  <p className="font-medium text-gray-900">{formatDate(article.created_at)}</p>
                </div>
              </div>
              
              <div className="flex items-center space-x-3">
                <div className="p-2 bg-purple-100 rounded-lg">
                  <Clock className="h-5 w-5 text-purple-600" />
                </div>
                <div>
                  <p className="text-sm text-gray-500">Waktu Baca</p>
                  <p className="font-medium text-gray-900">{article.read_time} menit</p>
                </div>
              </div>
              
              <div className="flex items-center space-x-3">
                <div className="p-2 bg-orange-100 rounded-lg">
                  <BookOpen className="h-5 w-5 text-orange-600" />
                </div>
                <div>
                  <p className="text-sm text-gray-500">Jumlah Kata</p>
                  <p className="font-medium text-gray-900">{article.content.replace(/<[^>]*>/g, '').split(/\s+/).length} kata</p>
                </div>
              </div>
            </div>
          </div>

          {/* Tags */}
          {article.tags && (
            <div className="mb-8">
              <div className="flex items-center space-x-2 mb-3">
                <Tag className="h-5 w-5 text-gray-400" />
                <span className="text-sm font-medium text-gray-600">Tag:</span>
              </div>
              <div className="flex flex-wrap gap-2">
                {article.tags.split(',').map((tag, index) => (
                  <span
                    key={index}
                    className="px-4 py-2 bg-gradient-to-r from-gray-100 to-gray-200 text-gray-700 rounded-full text-sm font-medium hover:from-teal-100 hover:to-teal-200 hover:text-teal-800 transition-all duration-200 cursor-pointer"
                  >
                    #{tag.trim()}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>

        {/* Featured Image */}
        {article.featured_image && (
          <div className="mb-12">
            <div className="relative w-full h-[500px] rounded-2xl overflow-hidden shadow-2xl">
              <Image
                src={article.featured_image}
                alt={article.title}
                fill
                className="object-cover"
                priority
              />
              <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent" />
            </div>
          </div>
        )}

        {/* Article Content */}
        <div className="bg-white rounded-2xl shadow-lg border overflow-hidden">
          <div className="p-8 md:p-12">
            <div 
              className="prose prose-xl max-w-none 
                prose-headings:text-gray-900 prose-headings:font-bold prose-headings:tracking-tight
                prose-h1:text-4xl prose-h1:mb-8 prose-h1:mt-12 prose-h1:first:mt-0
                prose-h2:text-3xl prose-h2:mb-6 prose-h2:mt-10
                prose-h3:text-2xl prose-h3:mb-4 prose-h3:mt-8
                prose-p:text-gray-700 prose-p:leading-relaxed prose-p:mb-6 prose-p:text-lg
                prose-li:text-gray-700 prose-li:leading-relaxed prose-li:text-lg
                prose-strong:text-gray-900 prose-strong:font-semibold
                prose-blockquote:text-gray-600 prose-blockquote:border-l-4 prose-blockquote:border-teal-500 prose-blockquote:bg-teal-50 prose-blockquote:p-6 prose-blockquote:rounded-r-lg prose-blockquote:my-8
                prose-ul:my-6 prose-ol:my-6
                prose-a:text-teal-600 prose-a:no-underline hover:prose-a:underline
                prose-img:rounded-lg prose-img:shadow-md prose-img:my-8
                prose-code:bg-gray-100 prose-code:px-2 prose-code:py-1 prose-code:rounded prose-code:text-sm
                prose-pre:bg-gray-900 prose-pre:text-gray-100 prose-pre:p-6 prose-pre:rounded-lg prose-pre:overflow-x-auto"
              dangerouslySetInnerHTML={{ __html: article.content }}
            />
          </div>
        </div>

        {/* Article Footer */}
        <div className="mt-16">
          {/* Author Card */}
          <div className="bg-gradient-to-r from-teal-50 to-blue-50 rounded-2xl p-8 mb-8">
            <div className="flex items-center space-x-4">
              <div className="w-16 h-16 bg-gradient-to-r from-teal-500 to-blue-600 rounded-full flex items-center justify-center">
                <span className="text-white font-bold text-xl">
                  {article.author.charAt(0)}
                </span>
              </div>
              <div>
                <h3 className="text-xl font-bold text-gray-900">{article.author}</h3>
                <p className="text-gray-600">Tim Editorial Aggre Capital</p>
                <p className="text-sm text-gray-500 mt-1">
                  Terakhir diperbarui: {formatDate(article.updated_at)}
                </p>
              </div>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="bg-white rounded-2xl p-8 shadow-lg border">
            <div className="flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0">
              <div className="flex items-center space-x-4">
                <Button
                  variant="outline"
                  onClick={handleLike}
                  className={`flex items-center space-x-2 px-6 py-3 ${
                    isLiked ? 'text-red-500 border-red-200 bg-red-50' : 'text-gray-600'
                  }`}
                >
                  <Heart className={`h-5 w-5 ${isLiked ? 'fill-current' : ''}`} />
                  <span>{isLiked ? 'Disukai' : 'Suka'}</span>
                </Button>
                
                <Button
                  variant="outline"
                  onClick={handleBookmark}
                  className={`flex items-center space-x-2 px-6 py-3 ${
                    isBookmarked ? 'text-yellow-500 border-yellow-200 bg-yellow-50' : 'text-gray-600'
                  }`}
                >
                  <Bookmark className={`h-5 w-5 ${isBookmarked ? 'fill-current' : ''}`} />
                  <span>{isBookmarked ? 'Disimpan' : 'Simpan'}</span>
                </Button>
              </div>
              
              <div className="flex items-center space-x-4">
                <Button
                  variant="outline"
                  onClick={() => router.push('/news')}
                  className="flex items-center space-x-2 px-6 py-3"
                >
                  <ArrowLeft className="h-5 w-5" />
                  <span>Berita Lainnya</span>
                </Button>
                
                <Button
                  onClick={() => router.push('/pengajuan')}
                  className="bg-gradient-to-r from-teal-600 to-blue-600 hover:from-teal-700 hover:to-blue-700 text-white px-8 py-3 font-semibold shadow-lg hover:shadow-xl transition-all duration-200"
                >
                  Ajukan Pendanaan
                </Button>
              </div>
            </div>
          </div>

          {/* Related Articles Suggestion */}
          <div className="mt-12 bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-8">
            <h3 className="text-2xl font-bold text-gray-900 mb-6 text-center">
              ðŸ“š Baca Juga Artikel Lainnya
            </h3>
            <div className="text-center">
              <p className="text-gray-600 mb-6">
                Temukan lebih banyak artikel menarik tentang keuangan, bisnis, dan teknologi
              </p>
              <Button
                onClick={() => router.push('/news')}
                className="bg-white text-teal-600 border-2 border-teal-600 hover:bg-teal-600 hover:text-white px-8 py-3 font-semibold"
              >
                Jelajahi Semua Artikel
              </Button>
            </div>
          </div>

          {/* Right Sidebar */}
          <div className="lg:col-span-3 order-3">
            <NewsSidebar currentArticleId={article.id} />
          </div>
        </div>
      </div>
    </div>
  )
}
